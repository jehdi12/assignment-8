public class ShellSort {
public static void shellSort(int array[]) {
int n = array.length;

for (int gap = n/2; gap > 0; gap /= 2) {
for (int i = gap; i < n; i += 1) {
int temp = array[i];

int j;
for (j = i; j >= gap && array[j - gap] > temp; j -= gap)
array[j] = array[j - gap];

array[j] = temp;
}
}
}
}



2. Quick Sort:

public class QuickSort {
public static void quickSort(int arr[], int low, int high) {
if (low < high) {
int pi = partition(arr, low, high);

quickSort(arr, low, pi-1);
quickSort(arr, pi+1, high);
}
}

private static int partition(int arr[], int low, int high) {
int pivot = arr[high];
int i = (low-1);
for (int j=low; j if (arr[j] < pivot) {
i++;

// swap arr[i] and arr[j]
int temp = arr[i];
arr[i] = arr[j];
arr[j] = temp;
}
}

// swap arr[i+1] and arr[high]
int temp = arr[i+1];
arr[i+1] = arr[high];
arr[high] = temp;

return i+1;
}
}
